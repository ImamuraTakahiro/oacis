- if run.parameter_set.simulator.support_mpi
  .control-group
    = f.label(:mpi_procs, "MPI procs", class: 'control-label')
    .controls
      = f.text_field(:mpi_procs)
- if run.parameter_set.simulator.support_omp
  .control-group
    = f.label(:omp_threads, "OMP threads", class: 'control-label')
    .controls
      = f.text_field(:omp_threads)
.control-group
  = f.label(:priority, 'Priorities of Runs', class: 'control-label')
  .controls
    = f.select(:priority, options_for_select(Run::PRIORITY_ORDER.sort_by {|a| a[0]}.map {|a| [a[1], a[0]]}, selected: 1))
.control-group
  = f.label(:submitted_to, class: 'control-label')
  .controls
    - host_names = run.simulator.executable_on.map {|h| [h.name, h.id.to_s]}
    - host_names += [ ["(manual submission)", nil] ]
    - selected_id = run.submitted_to ? run.submitted_to.id.to_s : nil
    = f.select(:submitted_to, options_for_select(host_names, selected: selected_id) )
- run.simulator.executable_on.each do |host|
  %div{ id: "host_parameters_#{host.id}"}
    - host.host_parameter_definitions.each do |hpdef|
      .control-group
        = label_tag(:"run[host_parameters][#{hpdef.key}]", hpdef.key, class: 'control-label')
        .controls
          - value = run.host_parameters[hpdef.key] || hpdef.default
          = text_field_tag(:"run[host_parameters][#{hpdef.key}]", value)
          = "Format: /#{hpdef.format}/"

:javascript
  $(function() {
    $('select#run_submitted_to').change(function() {
      $('div[id^=host_parameters]').hide("normal");
      var host_id = $("select#run_submitted_to option:selected").val();
      var selected = $('div#host_parameters_' + host_id);
      selected.show("normal");
    });
    $('select#run_submitted_to').trigger('change');
  });
