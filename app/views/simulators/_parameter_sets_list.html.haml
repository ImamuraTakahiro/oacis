%h3 List of Parameter Sets
%table.table.table-condensed.table-striped.table-hover#params_list{:'data-source' => "#{_parameters_list_simulator_path(@simulator.to_param, format: "json", query_id: @query_id)}"}
  %thead
    %tr
      %th.span1 Runs Progress
      %th.span1 Updated_at
      - @simulator.parameter_definitions.each do |key,key_def|
        %th.span1= key
  %tbody

%a.btn.btn-primary{href: new_simulator_parameter_set_path(@simulator)}
  New Parameter Set
  
%h3 Parameter Filter
= form_tag( _make_query_simulator_path(@simulator) ) do |f|
  %table
    %tbody
      %tr
        %td
          "Key"
        %td
          "Matcher"
        %td
          "Value"
      %tr#queries_form_original
        %td#select_param_form
          = select_tag "query[][param]", options_for_select(@simulator.parameter_definitions)
        %td#select_matcher_form
          = select_tag "query[][matcher]", options_for_select({""=>""})
        %td#select_value_form
          = text_field_tag "query[][value]"
  .controls
    .btn#add_queries_form Add more filters
    = hidden_field_tag "query_id", @query_id
    = submit_tag "Save this Filter", :class => 'btn btn-primary'

- if @query_list
  %h4 Select query
  = form_for(@simulator, :url=>{:controller=>"simulators", :action=>"show"}, :html => { :method => :get } ) do |f|
    = select_tag "query_id", options_for_select(@query_list, @query_id), :prompt => "all"
    = f.submit "Load Filter", :class => 'btn btn-primary', :name => nil

- unless @query_id.blank?
  %h4 Delete query
  = form_tag( _make_query_simulator_path(@simulator) ) do |f|
    = hidden_field_tag "query_id", @query_id
    = submit_tag "Delete Filter", :class => 'btn btn-primary', :name => :delete_query

:javascript
  $(function() {
    $('#add_queries_form').click(function() {
      var cloned = $('#queries_form_original').clone();
      $('#add_queries_form').before($(cloned));
      $("select" ,cloned).trigger("change");
    });
  });

  $(function() {
    $("body").on("change", "#select_param_form select", function(){
      $("#select_matcher_form option",$(this).parent().parent()).remove()
      var matcher_form_selector = $("#select_matcher_form",$(this).parent().parent())
      var matcher_val;
      var matcher_text;
      if($(":selected",this).attr('type') == "Integer" || $(":selected",this).attr('type') == "Float") {
        matcher_val = #{raw ParameterSetQuery::NumTypeMatchers.to_json};
        matcher_text = #{raw ParameterSetQuery::NumTypeMatcherStrings.to_json};
      } else if($(":selected",this).attr('type') == "Boolean") {
        matcher_val = #{raw ParameterSetQuery::BooleanTypeMatchers.to_json};
        matcher_text = #{raw ParameterSetQuery::BooleanTypeMatchers.to_json};
      } else if($(":selected",this).attr('type') == "String") {
        matcher_val = #{raw ParameterSetQuery::StringTypeMatchers.to_json};
        matcher_text = #{raw ParameterSetQuery::StringTypeMatchers.to_json};
      }

      for(i in matcher_val){
        $("select",matcher_form_selector).append("<option value=\"\"></option>");
        $("option:nth-child("+(parseInt(i)+1)+")",matcher_form_selector).val(matcher_val[i]).text(matcher_text[i]);
      }

      var value_form_selector = $("#select_value_form",$(this).parent().parent())
      $("input",value_form_selector).remove()
      value_form_selector.append("<input id=\"query__value\" name=\"query[][value]\" type=\"text\" value="+ $(":selected",this).attr('default') +">")
    });
  });

  $(function() {
    var parameter_form_selector = $("#select_param_form select")
    parameter_form_selector.val("#{@simulator.parameter_definitions.keys[0]}");
    parameter_form_selector.trigger("change");
  });

  var param_list_table_width;

  $(function() {
    param_list_table_width = $("#param_list").width()
  });



:coffeescript
jQuery ->
  $('#params_list').dataTable
    bProcessing: true
    bServerSide: true
    bFilter: false
    bAutoWidth: false
    aoColumnDefs: [
      { "sWidth": "150px", "aTargets": [ 0 ] }
    ]
    sAjaxSource: $('#params_list').data('source')
    sDom: "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span6'i><'span6'p>>"
    sPaginationType: "bootstrap"
    fnDrawCallback: (oSettings)->
      $("tbody > tr", this).each (i, parent_element)->
        if $("a", parent_element).length
          a_element = $("a", parent_element)
          if $("img", parent_element).length == 0
            $(a_element).before($("<img>")
              .attr("id", "treebtn")
              .attr("src", "/assets/expand.png")
              .attr("align", "left")
              .attr("style", "margin-right: 5px;")
              .attr("dialog", "close"))
          param_id = $(a_element).attr("href").substr($(a_element).attr("href").lastIndexOf("/")+1)
          $(a_element).text("")
          element  = a_element
          $.getJSON "/parameter_sets/"+param_id+"/_runs_status_count", (runs)->
            if runs.total > 0
              $(element).append($("<div>").addClass("progress"))
              div_element = $("div",element)
              if runs.finished > 0
                $(div_element).append($("<span>").addClass("progress progress-success progress-striped active"))
                percent = Math.floor(100.0*runs.finished/runs.total)
                $("span.progress.progress-success.progress-striped.active", div_element)
                  .append($("<span>").addClass("bar").attr({style: "width: "+percent+"%"}).text(percent+"%"))
              if runs.running > 0
                $(div_element).append($("<span>").addClass("progress progress-warning progress-striped active"))
                percent = Math.floor(100.0*runs.running/runs.total)
                $("span.progress.progress-warning.progress-striped.active", div_element)
                  .append($("<span>").addClass("bar").attr({style: "width: "+percent+"%"}).text(percent+"%"))
              if runs.failed > 0
                $(div_element).append($("<span>").addClass("progress progress-danger progress-striped active"))
                percent = Math.floor(100.0*runs.failed/runs.total)
                $("span.progress.progress-danger.progress-striped.active", div_element)
                  .append($("<span>").addClass("bar").attr({style: "width: "+percent+"%"}).text(percent+"%"))
            else
              $(element).append(param_id)

jQuery ->
  $("body").on "click", "img#treebtn", ->
    if ($(this).attr("dialog") == "close")
      $("img#treebtn[dialog='open']", $(this).parent().parent().parent()).each ->
        $(this).trigger("click")
      td_element = $(this).parent()
      tr_element = $(this).parent().parent()
      param_id = $("a", td_element).attr("href").substr($("a", td_element).attr("href").lastIndexOf("/")+1)
      table_cols = $("td", td_element.parent()).length
      $(this)
        .attr("dialog", "open")
        .attr("src", "/assets/collapse.png")
      $.get "/parameter_sets/"+param_id+"/_runs_table", (data) ->
        tr_element.after($("<tr>").html($("<td>").attr({colspan: table_cols}).html(data)))
        $("#runs_list" ,tr_element.next()).trigger("change");
    else
      $(this)
        .attr("dialog", "close")
        .attr("src", "/assets/expand.png")
      $(this).parent().parent().next().remove()

jQuery ->
  $("body").on "change", "#runs_list", ->
    datatables_for_runs_table()