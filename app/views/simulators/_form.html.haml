= form_for @simulator, html: {class: 'form-horizontal'} do |f|
  = render partial: 'shared/error_messages', locals: {error_messages: @simulator.errors.full_messages}
  - has_ps = @simulator.parameter_sets.present?
  .form-group
    = f.label(:name, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.text_field(:name, class: ['form-control'])
  .form-group
    = label_tag('', 'Definition of Parameters', class: ['col-lg-2','control-label'])
    .col-lg-10
      #parameters_form
      = f.fields_for :parameter_definitions do |builder|
        = render 'parameter_definition_fields', f: builder, disabled: has_ps
      #add_field_here
      .form-inline
        .form-group
          .col-lg-2
            = text_field_tag '__dummy__', "_seed", {disabled: true, class: 'form-control'}
        .form-group
          .col-lg-1
            = select_tag '__dummy__', options_for_select(['seed']), {disabled: true, class: 'form-control'}
        .form-group
          .col-lg-2
            = text_field_tag '__dummy__', "-", {disabled: true, class: 'form-control'}
      .form-group
        .col-lg-2
          = text_area_tag '__dummy__', "Random number seed", rows: 3, disabled: true
      = link_to_add_fields "Add Parameter", f, :parameter_definitions unless has_ps
  .form-group
    = f.label(:pre_process_script, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.text_area(:pre_process_script, rows: 3, class: 'form-control')
  .form-group
    = f.label(:command, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.text_field(:command, class: 'form-control')
  .form-group
    = f.label(:print_version_command, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.text_field(:print_version_command, class: 'form-control')
  .form-group
    = f.label(:support_input_json, "Input type", class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.select(:support_input_json, {"Argument" => false, "JSON" => true}, {},{class: 'form-control'})
  .form-group
    = f.label(:support_mpi, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.check_box(:support_mpi, class: 'form-control')
  .form-group
    = f.label(:support_omp, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.check_box(:support_omp, class: 'form-control')
  .form-group
    = f.label(:description, class: ['col-lg-2','control-label'])
    .col-lg-2
      = f.text_area(:description, rows: 5, class: 'form-control')
  .form-group
    .col-lg-2
      .control-label
        Executable_on
    .col-lg-2
      = hidden_field_tag "simulator[executable_on_ids][]", nil
      - Host.all.each do |host|
        %label{ for: dom_id(host) }
          = check_box_tag "simulator[executable_on_ids][]", host.id.to_s, @simulator.executable_on_ids.include?(host.id), id: dom_id(host), class: 'form-control'
          = host.name
  - if @duplicating_simulator
    .form-group
      .col-lg-2.control-label
        Copy Analyzers
      .col-lg-2
        = hidden_field_tag "duplicating_simulator", @duplicating_simulator.id
        - @duplicating_simulator.analyzers.each do |azr|
          %label{ for: dom_id(azr) }
            = check_box_tag "copied_analyzers[]", azr.id.to_s, @copied_analyzers.include?(azr), id: dom_id(azr)
            = "#{azr.simulator.name} / #{azr.name}"
  .form-group
    .col-lg-4.col-lg-offset-2
      = f.submit(class: 'btn btn-primary')
      = link_to('Cancel', simulators_path, class: ['btn', 'btn-default'])
