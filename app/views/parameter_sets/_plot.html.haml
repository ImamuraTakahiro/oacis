%h3 Plot

%script{charset: "utf-8", src: "http://d3js.org/d3.v3.min.js"}

%form
  .form-inline
    %label{for: 'line-or-scatter'} Plot type
    %select#line-or-scatter
      %option{value: 'line'} line plot
      %option{value: 'scatter'} scatter plot
  %br
  .form-inline
    - simulator = @param_set.simulator
    - plottable = simulator.plottable
    #line-plot-form
      - parameter_keys = @param_set.parameter_keys_having_distinct_values
      = label_tag 'x_axis_key', "X-Axis"
      = select_tag 'x_axis_key', options_for_select(parameter_keys), id: 'x_axis_key', prompt: "[Plot All]";
      = label_tag 'y_axis_key', "Y-Axis"
      = select_tag 'y_axis_key', options_for_select(plottable), id: 'y_axis_key', prompt: "[Plot All]"
      = label_tag 'series', "Series"
      = select_tag 'series', options_for_select(parameter_keys), id: 'series', include_blank: true
      %a.btn.btn-primary#add_line_plot_button Add Line Plot
    #scatter-plot-form
      - parameter_keys = simulator.parameter_definitions.map(&:key)
      = label_tag 'x_axis_key', "X-Axis"
      = select_tag 'x_axis_key', options_for_select(parameter_keys), id: 'x_axis_key'
      = label_tag 'y_axis_key', "Y-Axis"
      = select_tag 'y_axis_key', options_for_select(parameter_keys, selected: parameter_keys[1]), id: 'y_axis_key'
      = label_tag 'result', "Result"
      = select_tag 'Result', options_for_select(plottable), id: 'result'
      %a.btn.btn-primary#add_scatter_plot_button Add Scatter Plot
    #irrelevant-params
      %br
      Irrelevant parameters :
      %br
      - simulator.parameter_definitions.map(&:key).each do |key|
        = label_tag key, key
        = check_box_tag key

%hr

#plot
  #plot-tooltip.plot-tooltip{style: "opacity: 0;"}

:css
  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }
  div.plot-tooltip {
    position: absolute;
    text-align: center;
    padding: 2px;
    font: 12px sans-serif;
    background: black;
    color: white;
    border: 0px;
    border-radius: 8px;
    pointer-events: none;
    z-index: 10;
  }

:javascript
  function show_form_for_plots() {
    if( $('#line-or-scatter').val() == 'line' ) {
      $('#line-plot-form').show();
      $('#scatter-plot-form').hide();
    }
    else {
      $('#line-plot-form').hide();
      $('#scatter-plot-form').show();
    }
  }
  $(show_form_for_plots);
  $('#line-or-scatter').change(show_form_for_plots);

  function add_line_plot(x, y, series, irrelevants) {
    var url = "#{_plot_parameter_set_path(@param_set)}" + ".json";
    var url_with_param = url + "?x_axis_key=" + encodeURIComponent(x) + "&y_axis_key=" + encodeURIComponent(y) + "&series=" + encodeURIComponent(series) + "&irrelevants=" + encodeURIComponent(irrelevants);
    var ps_base_url = "#{parameter_set_path('')}";
    draw_plot(url_with_param, ps_base_url);
  }
  $('#add_line_plot_button').on('click', function() {
    var x = $('#x_axis_key').val();
    var y = $('#y_axis_key').val();
    var series = $('#series').val();
    var irrelevants = $('#irrelevant-params').children("input:checkbox:checked").map(function() {
      return this.id;
      }).get().join(',');
    if( x == "" ) {
      x = new Array();
      $('#x_axis_key').children('option').each(function() {
        if( $(this).val() != "" ) {
          x.push( $(this).val() );
        }
      });
    }
    else {
      x = new Array(x);
    }
    if( y == "" ) {
      y = new Array();
      $('#y_axis_key').children('option').each(function() {
        if( $(this).val() != "" ) {
          y.push( $(this).val() );
        }
      });
    }
    else {
      y = new Array(y);
    }

    x.forEach(function(xval) {
      y.forEach(function(yval) {
        add_line_plot(xval, yval, series, irrelevants);
      })
    })
  });
