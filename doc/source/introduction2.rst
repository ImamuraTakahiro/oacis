==========================================
はじめに
==========================================

CASSIA Managerとは？
==========================

CASSIA Manager (CM) とはシミュレーションのジョブおよび結果を効率的に管理するためのミドルウェアである。

| 近年の計算機および計算科学の発展により、様々な問題に対してシミュレーションを行うための計算リソースは容易に手に入るようになった。
| 一方で、数百のモデル、数千のパラメータセットに対してシミュレーションを行うだけの計算リソースを持っていたとしても、その多岐にわたるシミュレーションを手動で複数のホストで効率的に実行し、計算結果を管理し、意味のある結果を取り出す事は容易ではない。
| CMはその様な状況の解決を目的として開発されている。

| 手動でシミュレーションを実行する場合の典型的な手順は以下のようになるであろう。
#. リモートホストにログイン
#. 実行用ディレクトリを作成
#. ジョブ実行用スクリプト（ジョブスクリプトと呼ぶ）を作成。実行時のパラメータを記入
#. スケジューラにサブミット
#. ジョブ実行完了まで待つ
#. 結果をローカルホストに転送
#. 結果の解析
#. （他のパラメータでの計算が必要であれば）最初に戻る

| CASSIA Managerは上記の手順の大部分を自動化し、「パラメータ選択→シミュレーション→解析」のループを効率的にまわす事ができる。

| ユーザーは登録したシミュレータをの実行をウェブブラウザから指示することができ、
実行されたシミュレーションジョブは完了後に自動的にローカルホスト内のデータベースに格納される。
この際、

- シミュレーションを実行したパラメータ
- 実行日時
- 実行ホスト
- 要した時間
- 乱数の種

| などの情報も後に追跡可能な状態で保存され、これらはブラウザから容易にアクセス可能である。
| またAPIを使用することにより、パラメータ選択や解析の実行を自動化することもできる。

本ドキュメントの構成
========================

| 本ドキュメントの構成は以下のようになっている。

- システム概要
    - システム構成
    - 基本的なデータ構造
    - ジョブ実行シーケンス
- インストール方法
- 基本的な使い方
    - ホストの登録方法
    - シミュレータの登録方法
    - Jobページの見方
    - シミュレータの実行方法
- 高度な使い方
    - パラメータをJSONで渡す
    - プリプロセスの定義
    - スケジューラを経由してジョブを実行する
        - ジョブスクリプトのテンプレートを登録する
          - tarおよびbzip2がPATHに存在しない場合
        - MPI, OpenMPのジョブの実行方法
          - MPIの実行方法を変更したい場合
    - Analyzerの登録と実行
- APIの使い方
- 今後の展望

| とりあえず使ってみたい場合は「基本的な使い方」の章までを見れば使い始められるようになっている。
| それ以降の章は必要に応じて読めばよい。

Infomation
====
* CASSIA project since 2013
* ソースリポジトリ: https://bitbucket.org/yohm/acm2 (privete repository)