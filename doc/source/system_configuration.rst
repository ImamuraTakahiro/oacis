==========================================
A Brief Overview on the System
==========================================

System Configuration
====

CASSIA Manager (CM) のシステム概要を図1に示す。

###ここに図が入る予定###

CASSIA Manager (CM)は、Ruby on Railsフレームワークを用いて構築されており、ユーザーはウェブブラウザを用いて実行したシミュレーション結果などにアクセスすることができる。
内部のデータベースとして MongoDB および Redis を使用しており、シミュレーション実行時の情報、パラメータについての情報、ホストについての情報などが格納される。
シミュレータが出力したファイルについては、ファイルシステム上に保存される。

CMは登録されたリモートホストにSSH接続し、ジョブを投入する事ができる。
以下では、ユーザーからシミュレーション実行をリクエストされてから、シミュレーション結果をCMに保存するまでの処理の流れに沿ってシステムの概要を説明する。

それを実行するための処理がWorkerと呼ばれるデーモンプロセスによりバックグラウンドで開始される。
WorkerはリモートホストへのSSH接続やファイル転送などの時間がかかる処理を担当する。

ユーザーによって指定されたシミュレーションを実行するためのシェルスクリプトを動的に生成し、それをシステムにあらかじめインストールされているTorqueなどのキューイングシステムを利用して実行する。
シミュレーションが終了した際にはCMのあるサーバーにSFTPで転送され、結果がDB内に格納される。

格納された結果はブラウザからアクセス可能となる。

Overview on Data Structure
====

CMではシミュレーション結果は図の様なSimulator, ParameterSet, Runの３層構造に分けて保存される。
Simulatorは複数のParameterSetを持ち、ParameterSetは複数のRunを持っている。

例として、交通流シミュレーターを考えよう。
この交通流シミュレーターは...

Sequence of Simulator Executions
====
